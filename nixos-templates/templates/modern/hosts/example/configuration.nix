# Example host configuration showing disko module usage
{ config
, lib
, pkgs
, inputs
, ...
}: {
  imports = [
    # Import disko and choose your disk configuration
    inputs.disko.nixosModules.disko

    # Choose ONE of the following disk configurations:
    # ../../modules/disko/btrfs-single.nix     # Btrfs single disk (no encryption)
    # ../../modules/disko/btrfs-luks.nix       # Btrfs with LUKS2 encryption
    # ../../modules/disko/zfs-single.nix       # ZFS single disk (no encryption)
    # ../../modules/disko/zfs-mirror.nix       # ZFS mirror configuration
    ../../modules/disko/zfs-luks.nix # ZFS with LUKS2 encryption (current selection)

    # Hardware configuration (generated by nixos-generate-config)
    ./hardware-configuration.nix
  ];

  # Basic system configuration
  networking.hostName = "example";

  # Override the default disk device if needed
  # disko.devices.disk.main.device = "/dev/nvme0n1";

  # For ZFS configurations, you can override the hostId
  # networking.hostId = "12345678";  # Must be 8 hex characters

  # Boot configuration
  boot.loader = {
    systemd-boot.enable = true;
    efi.canTouchEfiVariables = true;
  };

  # For encrypted configurations, you might want to add:
  # boot.initrd.secrets = {
  #   "/crypto_keyfile.bin" = null;
  # };

  # System packages
  environment.systemPackages = with pkgs; [
    vim
    git
    htop
    cryptsetup # For LUKS management
    zfs # For ZFS management
  ];

  # Enable SSH for remote management
  services.openssh.enable = true;

  # User configuration
  users.users.admin = {
    isNormalUser = true;
    extraGroups = [ "wheel" ];
    initialPassword = "changeme"; # Change this after first login!
  };

  # This value determines the NixOS release
  system.stateVersion = "24.11";
}
