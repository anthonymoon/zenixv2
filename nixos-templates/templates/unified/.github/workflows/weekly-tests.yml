name: Weekly Comprehensive Tests

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      test-category:
        description: 'Test category to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - security
          - services
          - multi-machine
          - performance

jobs:
  # Run all VM tests comprehensively
  comprehensive-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Security tests
          - category: security
            test: vm-test-security-basic
          - category: security
            test: vm-test-security-firewall
          - category: security
            test: vm-test-security-ssh
          
          # Service tests
          - category: services
            test: vm-test-service-nginx
          - category: services
            test: vm-test-service-postgresql
          - category: services
            test: vm-test-service-docker
          - category: services
            test: vm-test-service-redis
          
          # Multi-machine tests
          - category: multi-machine
            test: vm-test-multi-client-server
          - category: multi-machine
            test: vm-test-multi-ha-cluster
          - category: multi-machine
            test: vm-test-multi-microservices
          
          # Profile tests
          - category: profiles
            test: vm-test-profile-base
          - category: profiles
            test: vm-test-profile-workstation
          - category: profiles
            test: vm-test-profile-server
            
    steps:
      - uses: actions/checkout@v4
      
      - name: Check if should run
        id: should-run
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ github.event.inputs.test-category }}" == "all" || "${{ github.event.inputs.test-category }}" == "${{ matrix.category }}" ]]; then
              echo "run=true" >> $GITHUB_OUTPUT
            else
              echo "run=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "run=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Install Nix
        if: steps.should-run.outputs.run == 'true'
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true
            system-features = nixos-test benchmark big-parallel kvm
            
      - name: Setup KVM
        if: steps.should-run.outputs.run == 'true'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
      - name: Free disk space for large tests
        if: steps.should-run.outputs.run == 'true' && matrix.category == 'multi-machine'
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
          
      - name: Run test ${{ matrix.test }}
        if: steps.should-run.outputs.run == 'true'
        run: |
          echo "🧪 Running ${{ matrix.test }} (category: ${{ matrix.category }})..."
          nix build .#checks.x86_64-linux.${{ matrix.test }} --print-build-logs -L
        timeout-minutes: 60

  # Performance benchmarks
  performance-benchmarks:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.test-category == 'all' || github.event.inputs.test-category == 'performance'))
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            accept-flake-config = true
            
      - name: Run benchmarks
        run: |
          echo "📊 Running performance benchmarks..."
          nix run .#benchmark || true
          
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: logs/benchmark-*.md
          retention-days: 90

  # Test result aggregation
  test-report:
    runs-on: ubuntu-latest
    needs: [comprehensive-tests, performance-benchmarks]
    if: always()
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate test report
        run: |
          echo "# Weekly Test Report" > test-report.md
          echo "" >> test-report.md
          echo "Date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> test-report.md
          echo "" >> test-report.md
          
          echo "## Test Results" >> test-report.md
          echo "" >> test-report.md
          echo "- Comprehensive Tests: ${{ needs.comprehensive-tests.result }}" >> test-report.md
          echo "- Performance Benchmarks: ${{ needs.performance-benchmarks.result }}" >> test-report.md
          echo "" >> test-report.md
          
          if [[ "${{ needs.comprehensive-tests.result }}" == "success" ]]; then
            echo "✅ All tests passed successfully!" >> test-report.md
          else
            echo "❌ Some tests failed. Please check the logs." >> test-report.md
          fi
          
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: weekly-test-report
          path: test-report.md
          retention-days: 90
          
      - name: Create issue on failure
        if: needs.comprehensive-tests.result == 'failure' && github.event_name == 'schedule'
        uses: actions/github-script@v6
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Weekly Tests Failed - ${date}`,
              body: `The weekly comprehensive test suite failed. Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.`,
              labels: ['test-failure', 'automated']
            });